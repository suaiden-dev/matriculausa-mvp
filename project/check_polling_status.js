// Script para verificar o status do polling autom√°tico
// Execute este script para verificar se o sistema est√° funcionando

import { createClient } from '@supabase/supabase-js';
import { loadEnv } from './load_env.js';

// Carregar vari√°veis de ambiente
loadEnv();

// Configura√ß√£o do Supabase
const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

async function checkPollingStatus() {
  console.log('üìä VERIFICA√á√ÉO DO STATUS DO POLLING');
  console.log('===================================\n');

  try {
    // 1. Verificar configura√ß√µes ativas
    console.log('1Ô∏è‚É£ Verificando configura√ß√µes ativas...');
    const { data: configs, error: configError } = await supabase
      .from('email_configurations')
      .select('*')
      .eq('provider_type', 'microsoft')
      .eq('is_active', true);

    if (configError) {
      console.error('‚ùå Erro ao buscar configura√ß√µes:', configError);
      return;
    }

    if (!configs || configs.length === 0) {
      console.log('‚ùå Nenhuma configura√ß√£o ativa encontrada!');
      console.log('üí° Dica: Ative o processamento de email no frontend primeiro');
      return;
    }

    console.log(`‚úÖ ${configs.length} configura√ß√£o(√µes) ativa(s) encontrada(s)\n`);

    // 2. Verificar status de cada configura√ß√£o
    for (const config of configs) {
      console.log(`üîç Usu√°rio: ${config.user_id}`);
      console.log(`   Email: ${config.email_address}`);
      console.log(`   Ativo: ${config.is_active ? '‚úÖ' : '‚ùå'}`);
      console.log(`   √öltimo processamento: ${config.last_processing_date || 'Nunca'}`);
      console.log(`   Total processados: ${config.total_processed || 0}`);
      console.log(`   Total respondidos: ${config.total_replied || 0}`);
      
      // Verificar emails processados nas √∫ltimas 2 horas
      const twoHoursAgo = new Date();
      twoHoursAgo.setHours(twoHoursAgo.getHours() - 2);
      
      const { data: recentEmails, error: recentError } = await supabase
        .from('processed_microsoft_emails')
        .select('*')
        .eq('user_id', config.user_id)
        .gte('processed_at', twoHoursAgo.toISOString())
        .order('processed_at', { ascending: false });

      if (recentError) {
        console.log(`   ‚ùå Erro ao buscar emails recentes: ${recentError.message}`);
      } else {
        console.log(`   üìß Emails processados nas √∫ltimas 2h: ${recentEmails?.length || 0}`);
        
        if (recentEmails && recentEmails.length > 0) {
          const repliedCount = recentEmails.filter(e => e.status === 'replied').length;
          const errorCount = recentEmails.filter(e => e.status === 'error').length;
          const processedCount = recentEmails.filter(e => e.status === 'processed').length;
          
          console.log(`      ‚úÖ Respondidos: ${repliedCount}`);
          console.log(`      üìù Processados: ${processedCount}`);
          console.log(`      ‚ùå Erros: ${errorCount}`);
          
          // Mostrar √∫ltimos emails
          if (recentEmails.length > 0) {
            console.log(`   üìß √öltimos emails:`);
            recentEmails.slice(0, 3).forEach((email, index) => {
              console.log(`      ${index + 1}. ${email.subject || 'Sem assunto'} (${email.status})`);
              console.log(`         De: ${email.from_email}`);
              console.log(`         Em: ${new Date(email.processed_at).toLocaleString()}`);
            });
          }
        } else {
          console.log(`   ‚ö†Ô∏è Nenhum email processado recentemente`);
          console.log(`   üí° Poss√≠veis causas:`);
          console.log(`      - Polling n√£o est√° funcionando`);
          console.log(`      - Token de acesso expirado`);
          console.log(`      - Nenhum email novo recebido`);
        }
      }
      console.log('');
    }

    // 3. Verificar status geral do sistema
    console.log('üìà STATUS GERAL DO SISTEMA:');
    console.log('==========================');
    
    const { data: allRecentEmails } = await supabase
      .from('processed_microsoft_emails')
      .select('*')
      .gte('processed_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString())
      .order('processed_at', { ascending: false });

    if (allRecentEmails && allRecentEmails.length > 0) {
      const totalReplied = allRecentEmails.filter(e => e.status === 'replied').length;
      const totalErrors = allRecentEmails.filter(e => e.status === 'error').length;
      const totalProcessed = allRecentEmails.filter(e => e.status === 'processed').length;
      
      console.log(`üìß Emails processados nas √∫ltimas 24h: ${allRecentEmails.length}`);
      console.log(`   ‚úÖ Respondidos: ${totalReplied}`);
      console.log(`   üìù Processados: ${totalProcessed}`);
      console.log(`   ‚ùå Erros: ${totalErrors}`);
      
      if (totalErrors > 0) {
        console.log(`\n‚ö†Ô∏è ATEN√á√ÉO: ${totalErrors} erro(s) encontrado(s)!`);
        console.log('üí° Verifique os logs para mais detalhes sobre os erros');
      }
    } else {
      console.log('‚ö†Ô∏è Nenhum email foi processado nas √∫ltimas 24 horas!');
      console.log('üí° Poss√≠veis causas:');
      console.log('   - Sistema de polling n√£o est√° funcionando');
      console.log('   - Tokens de acesso expiraram');
      console.log('   - Problema na conex√£o com Microsoft Graph');
      console.log('   - Nenhum email novo foi recebido');
    }

    // 4. Sugest√µes de solu√ß√£o
    console.log('\nüõ†Ô∏è SUGEST√ïES DE SOLU√á√ÉO:');
    console.log('========================');
    
    if (!configs || configs.length === 0) {
      console.log('1. ‚ùå Nenhuma configura√ß√£o ativa');
      console.log('   ‚Üí Ative o processamento de email no frontend');
      console.log('   ‚Üí Verifique se o usu√°rio fez login');
    } else if (!allRecentEmails || allRecentEmails.length === 0) {
      console.log('2. ‚ùå Nenhum email processado recentemente');
      console.log('   ‚Üí Verifique se o polling autom√°tico est√° funcionando');
      console.log('   ‚Üí Teste o processamento manual');
      console.log('   ‚Üí Verifique se os tokens de acesso n√£o expiraram');
    } else {
      console.log('3. ‚úÖ Sistema parece estar funcionando');
      console.log('   ‚Üí Verifique se o email foi enviado para o endere√ßo correto');
      console.log('   ‚Üí Verifique se o email n√£o foi filtrado como spam');
      console.log('   ‚Üí Aguarde alguns minutos para o processamento autom√°tico');
    }

    console.log('\nüìû PR√ìXIMOS PASSOS:');
    console.log('===================');
    console.log('1. Se n√£o h√° configura√ß√µes ativas: Ative no frontend');
    console.log('2. Se n√£o h√° emails processados: Teste o processamento manual');
    console.log('3. Se h√° erros: Verifique os logs do sistema');
    console.log('4. Se tudo parece OK: Verifique se o email foi enviado corretamente');

  } catch (error) {
    console.error('‚ùå Erro durante a verifica√ß√£o:', error);
  }
}

// Executar verifica√ß√£o
checkPollingStatus();
